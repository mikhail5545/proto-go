// github.com/mikhail5545/proto-go
// shared proto module for vitainmove project microservices
// Copyright (C) 2025  Mikhail Kulik

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";

package user.v0;

import "address/v0/address.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/mikhail5545/proto-go/proto/user/v0;userpb";

message User{
    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp updated_at = 3;
    string first_name = 4;
    string last_name = 5;
    optional string gender = 7;
    optional google.protobuf.Timestamp date_of_birth = 8;
    string email = 9;
    optional string phone_number = 10;
    optional string country = 11;
    bool is_verified = 12;
    bool is_admin = 13;
    repeated address.v0.Address addresses = 14;
}

message UserListItem{
    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    google.protobuf.Timestamp updated_at = 3;
    string first_name = 4;
    string last_name = 5;
    string email = 9;
    bool is_verified = 12;
    bool is_admin = 13;
}

message GetUserRequest{
    string id = 1;
}

message GetUserResponse{
    User user = 1;
}

message GetUserWithoutAddressesRequest{
    string id = 1;
}

message GetUserWithoutAddressesResponse{
    UserListItem user = 1;
}

message ListUsersRequest{
    int32 limit = 1;
    int32 offset = 2;
}

message ListUsersResponse{
    repeated UserListItem users = 1;
    int64 total = 2;
}

message CreateUserRequest{
    string first_name = 1;
    string last_name = 2;
    string email = 3;
    bool is_admin = 4;
}

message CreateUserResponse{
    User user = 1;
}

message CreateUserFromProviderRequest{
    string provider_id = 1;
    string email = 2;
    string first_name = 3;
    string last_name = 4;
    bool is_verified = 5;
}

message CreateUserFromProviderResponse{
    UserListItem user = 1;
}

message UpdateUserRequest{
    string id = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    optional string gender = 4;
    optional google.protobuf.Timestamp date_of_birth = 5;
    optional string email = 6;
    optional string phone_number = 7;
    optional string country = 8;
    optional bool is_verified = 9;
    optional bool is_admin = 10;
    google.protobuf.FieldMask update_mask = 11;
}

message UpdateUserResponse{
    User user = 1;
}

message DeleteUserRequest{
    string id = 1;
}

message DeleteUserResponse{
}

service UserService{
    rpc GetUser(GetUserRequest) returns (GetUserResponse) {}
    rpc GetUserWithoutAddresses(GetUserWithoutAddressesRequest) returns (GetUserWithoutAddressesResponse) {}
    rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
    rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
    rpc CreateUserFromProvider(CreateUserFromProviderRequest) returns (CreateUserFromProviderResponse) {}
    rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
    rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
}